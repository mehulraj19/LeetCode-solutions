/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int numberNodes(ListNode* start) {
        int count = 0;
        while(start != NULL) {
            count++;
            start = start->next;
        }
        return count;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head == NULL) {
            return head;
        }
        int v = numberNodes(head);
        if(v == 1 && n != 0) {
            return NULL;
        }
        if(v == n) {
            head = head->next;
            return head;
        }
        v -= n;
        ListNode* preptr = NULL;
        ListNode* ptr = head;
        while(v--) {
            preptr = ptr;
            ptr = ptr->next;
        }
        preptr->next = ptr->next;
        delete ptr;
        return head;
    }
};
