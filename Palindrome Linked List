/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int numberOfNodes(ListNode* ptr){
        int count=0;
        while(ptr != NULL){
            count++;
            ptr = ptr->next;
        }
        return count;
    }
    bool isPalindrome(ListNode* head) {
        int n = numberOfNodes(head);
        if(n == 1){
            return true;
        }
        
        string k="";
        while(head != NULL){
            char c = head->val + 48;
            k += c;
            head = head->next;
        }
        n = k.length();        
        for(int i=0, j=n-1; i<n, j>=0; i++, j--) {
            if(k[i] != k[j]) {
                return false; 
            }
        }
        return true;
    }
};
